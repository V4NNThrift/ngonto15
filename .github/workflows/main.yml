name: Yanzz RDP (Windows Server 2022)

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-2022
    timeout-minutes: 3600

    env:
      TAILSCALE_VERSION: "1.82.0"

    steps:
      - name: Print Windows version
        shell: pwsh
        run: |
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"

      - name: Configure Core RDP Settings
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force

          netsh advfirewall firewall delete rule name="RDP-Tailscale" | Out-Null
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389 | Out-Null

          Restart-Service -Name TermService -Force

      - name: Create RDP User with specific password
        shell: pwsh
        run: |
          $plain = "Evan123456"
          $securePass = ConvertTo-SecureString $plain -AsPlainText -Force

          $existing = Get-LocalUser -Name "Yanzz" -ErrorAction SilentlyContinue
          if ($null -eq $existing) {
            New-LocalUser -Name "Yanzz" -Password $securePass -AccountNeverExpires | Out-Null
          } else {
            Set-LocalUser -Name "Yanzz" -Password $securePass
          }

          Add-LocalGroupMember -Group "Administrators" -Member "Yanzz" -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "Yanzz" -ErrorAction SilentlyContinue

          if (-not (Get-LocalUser -Name "Yanzz" -ErrorAction SilentlyContinue)) {
            Write-Error "User creation failed"
            exit 1
          }

      - name: Install Tailscale
        shell: pwsh
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-$env:TAILSCALE_VERSION-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"

          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        shell: pwsh
        env:
          TS_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          if (-not $env:TS_KEY) {
            Write-Error "secrets.TAILSCALE_AUTH_KEY is not set."
            exit 1
          }

          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey="$env:TS_KEY" --hostname="gh-runner-$env:GITHUB_RUN_ID"

          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 12) {
            $tsIP = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 | Select-Object -First 1).Trim()
            if (-not $tsIP) { Start-Sleep -Seconds 5; $retries++ }
          }

          if (-not $tsIP) {
            Write-Error "Tailscale IP not assigned. Exiting."
            exit 1
          }

          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Verify RDP Accessibility (TCP 3389)
        shell: pwsh
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
            Write-Error "TCP connection to RDP port 3389 failed"
            exit 1
          }
          Write-Host "TCP connectivity successful!"

      - name: Install WinRAR (via winget + fallback to Chocolatey)
        shell: pwsh
        run: |
          Write-Host "Attempting to install WinRAR via winget..."
          if (Get-Command winget -ErrorAction SilentlyContinue) {
            Start-Process -FilePath "winget" -ArgumentList "install","--id","RARLab.WinRAR","-e","--silent","--accept-package-agreements","--accept-source-agreements" -Wait
          } else {
            Write-Host "winget not found. Fallback to Chocolatey..."
            if (Get-Command choco -ErrorAction SilentlyContinue) {
              Start-Process -FilePath "choco" -ArgumentList "install","winrar","-y" -Wait
            } else {
              Write-Error "Neither winget nor chocolatey found. Cannot install WinRAR."
              exit 1
            }
          }

          if (Get-Command winrar -ErrorAction SilentlyContinue) {
            Write-Host "WinRAR installed and available in PATH."
          } elseif (Test-Path "C:\\Program Files\\WinRAR\\WinRAR.exe") {
            Write-Host "WinRAR installed at C:\\Program Files\\WinRAR\\WinRAR.exe"
          } else {
            Write-Error "WinRAR installation failed or path unknown."
            exit 1
          }

      - name: Show Access Info (no password in logs)
        shell: pwsh
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address : $env:TAILSCALE_IP"
          Write-Host "Username: Yanzz"
          Write-Host "Password: (use the one configured in workflow)"
          Write-Host "==================`n"

      - name: Maintain Connection
        shell: pwsh
        run: |
          while ($true) {
            Write-Host "[$(Get-Date -Format o)] RDP active. Stop the job to terminate."
            Start-Sleep -Seconds 300
          }
