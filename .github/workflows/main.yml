name: Yanzz RDP (Win2022 + MuMu, 60h)

on:
  workflow_dispatch:

jobs:
  rdp-mumu:
    runs-on: windows-2022
    timeout-minutes: 3600

    env:
      TAILSCALE_VERSION: "1.82.0"
      # Opsional: isi manual bila sudah punya direct .exe
      MUMU_DIRECT_URL: ""

    steps:
      # --- RDP & user ---------------------------------------------------------
      - name: Enable RDP & open firewall
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP-3389" dir=in action=allow protocol=TCP localport=3389 | Out-Null
          Restart-Service -Name TermService -Force
          Write-Host "‚úÖ RDP enabled & firewall opened."

      - name: Create RDP user
        shell: pwsh
        run: |
          $user = "Yanzz"
          $pass = ConvertTo-SecureString "Evan123456" -AsPlainText -Force
          if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $user -Password $pass -AccountNeverExpires | Out-Null
          }
          Add-LocalGroupMember -Group "Administrators" -Member $user -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user -ErrorAction SilentlyContinue
          Write-Host "‚úÖ User $user ready."

      # --- Tailscale (IP) -----------------------------------------------------
      - name: Install Tailscale
        shell: pwsh
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-$env:TAILSCALE_VERSION-amd64.msi"
          $file = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $file
          Start-Process msiexec.exe -ArgumentList "/i `"$file`" /quiet /norestart" -Wait
          Remove-Item $file -Force
          Write-Host "‚úÖ Tailscale installed."

      - name: Connect to Tailscale
        shell: pwsh
        env:
          TS_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          if (-not $env:TS_KEY) { Write-Error "‚ùå secrets.TAILSCALE_AUTH_KEY not set."; exit 1 }
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey "$env:TS_KEY" --hostname "gh-runner-$env:GITHUB_RUN_ID"
          Start-Sleep -Seconds 10
          $ip = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 | Select-Object -First 1).Trim()
          if (-not $ip) { Write-Error "‚ùå No Tailscale IP found."; exit 1 }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV
          Write-Host "üåê Tailscale IP: $ip"

      # --- Performance ringan -------------------------------------------------
      - name: High Performance power plan (no sleep)
        shell: pwsh
        run: |
          powercfg /setactive SCHEME_MIN
          powercfg -change -monitor-timeout-ac 0
          powercfg -change -disk-timeout-ac 0
          powercfg -change -standby-timeout-ac 0
          powercfg -change -hibernate-timeout-ac 0
          Write-Host "‚ö° High Performance applied."

      # --- RDP codec prefer (H.264/AVC444) -----------------------------------
      - name: Prefer RDP AVC/H.264 (if client supports)
        shell: pwsh
        run: |
          $k="HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
          if (-not (Test-Path $k)) { New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT" -Name "Terminal Services" -Force | Out-Null }
          New-ItemProperty -Path $k -Name "AVC444ModePreferred" -PropertyType DWord -Value 1 -Force | Out-Null
          New-ItemProperty -Path $k -Name "UseAVCCodecForRDP" -PropertyType DWord -Value 1 -Force | Out-Null
          New-ItemProperty -Path $k -Name "PreferHardwareEncoding" -PropertyType DWord -Value 1 -Force | Out-Null
          Write-Host "üé¨ RDP AVC preference set."

      # --- Install MuMu (resolver multi-sumber) -------------------------------
      - name: Download & Install MuMu Player
        shell: pwsh
        run: |
          function Test-Url200 { param([string]$u)
            try {
              if (-not $u) { return $false }
              $resp = Invoke-WebRequest -Uri $u -Method Head -UseBasicParsing -TimeoutSec 30
              return ($resp.StatusCode -ge 200 -and $resp.StatusCode -lt 400)
            } catch { return $false }
          }

          function Get-MuMuUrl {
            param([string]$Override)

            # 0) Kalau ada URL override, pakai itu
            if ($Override -and $Override.Trim().Length -gt 0) { return $Override }

            # 1) Coba scrape halaman download resmi untuk .exe yang kelihatan (kadang statis)
            try {
              $page = Invoke-WebRequest -Uri "https://www.mumuplayer.com/download/" -UseBasicParsing -TimeoutSec 30
              if ($page -and $page.RawContent) {
                $m = [regex]::Matches($page.RawContent, 'https?://[^"\\s]+?\\.exe', 'IgnoreCase')
                foreach ($x in $m) {
                  if (Test-Url200 $x.Value) { return $x.Value }
                }
              }
            } catch {}

            # 2) Coba halaman "is downloading" (kadang ada link langsung di HTML)
            try {
              $page2 = Invoke-WebRequest -Uri "https://www.mumuplayer.com/installation/index.html" -UseBasicParsing -TimeoutSec 30
              if ($page2 -and $page2.RawContent) {
                $m2 = [regex]::Matches($page2.RawContent, 'https?://[^"\\s]+?\\.exe', 'IgnoreCase')
                foreach ($x in $m2) {
                  if (Test-Url200 $x.Value) { return $x.Value }
                }
              }
            } catch {}

            # 3) Daftar pola CDN resmi NetEase yang sering dipakai (dari update post resmi)
            $candidates = @(
              # Rilis ‚ÄúMuMu Player 12‚Äù jalur installer global
              "https://a11.gdl.netease.com/MuMuInstaller_3.1.7.0_overseas-v4.1.32.exe",
              "https://a11.gdl.netease.com/MuMuInstaller_3.1.6.0_overseas-v3.7.7.2550_all_1704941759.exe",
              # Jalur ‚ÄúMuMuNG-setup‚Äù (naming lain yang dipakai NetEase)
              "https://a11.gdl.netease.com/MuMuNG-setup-V4.1.32.3729-overseas-0617102718.exe"
            )
            foreach ($u in $candidates) {
              if (Test-Url200 $u) { return $u }
            }

            # 4) Fallback mirror tepercaya (pakai kalau resmi tidak bisa diakses)
            $mirrors = @(
              "https://www.filehorse.com/download-mumu/download/",       # FileHorse
              "https://mumu-player.en.uptodown.com/windows/download"     # Uptodown
            )
            foreach ($m in $mirrors) {
              try {
                $p = Invoke-WebRequest -Uri $m -UseBasicParsing -TimeoutSec 30
                $mm = [regex]::Matches($p.RawContent, 'https?://[^"\\s]+?\\.exe', 'IgnoreCase')
                foreach ($x in $mm) { if (Test-Url200 $x.Value) { return $x.Value } }
              } catch {}
            }

            return $null
          }

          $url = Get-MuMuUrl -Override $env:MUMU_DIRECT_URL
          if (-not $url) { Write-Error "‚ùå Gagal menemukan URL installer MuMu (.exe). Isi env MUMU_DIRECT_URL untuk override."; exit 1 }
          Write-Host "‚¨áÔ∏è  Downloading MuMu from:`n$url"

          $inst = Join-Path $env:TEMP "mumu_setup.exe"
          Invoke-WebRequest -Uri $url -OutFile $inst -UseBasicParsing -TimeoutSec 600

          # Coba silent flags umum; kalau gagal, run biasa
          $silentArgs = @("/S","/silent","/verysilent","/quiet","/qn")
          $ok = $false
          foreach ($arg in $silentArgs) {
            Write-Host "Installing MuMu (try $arg)..."
            try {
              Start-Process -FilePath $inst -ArgumentList $arg -Wait -NoNewWindow
              Start-Sleep -Seconds 5
              if (Test-Path "C:\Program Files\MuMu\MuMuPlayer-12\MuMuPlayer.exe" -or
                  Test-Path "C:\Program Files\MuMu\MuMuPlayer\MuMu.exe" -or
                  Test-Path "C:\Program Files\Netease\MuMu\emulator\MuMu.exe") { $ok = $true; break }
            } catch {}
          }
          if (-not $ok) {
            Write-Host "Silent install belum jalan, jalankan installer normal..."
            Start-Process -FilePath $inst -Wait -NoNewWindow
          }

          # Deteksi path
          $MuMuExe = $null
          foreach ($p in @(
            "C:\Program Files\MuMu\MuMuPlayer-12\MuMuPlayer.exe",
            "C:\Program Files\MuMu\MuMuPlayer\MuMu.exe",
            "C:\Program Files\Netease\MuMu\emulator\MuMu.exe"
          )) { if (Test-Path $p) { $MuMuExe = $p; break } }

          if ($MuMuExe) {
            "MUMU_EXE=$MuMuExe" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding ascii
            Write-Host "‚úÖ MuMu installed at: $MuMuExe"
          } else {
            Write-Warning "‚ö†Ô∏è  MuMu belum terdeteksi; cek via RDP, installer mungkin butuh klik manual."
          }

          Remove-Item $inst -Force -ErrorAction SilentlyContinue

      # --- Info koneksi -------------------------------------------------------
      - name: Show Access Info
        shell: pwsh
        run: |
          Write-Host "`n=== RDP ACCESS INFO ==="
          Write-Host "Address : $env:TAILSCALE_IP"
          Write-Host "Username: Yanzz"
          Write-Host "Password: Evan123456"
          Write-Host "MuMu   : $env:MUMU_EXE"
          Write-Host "=========================`n"

      # --- Keep alive (60 jam) ------------------------------------------------
      - name: Keep Alive
        shell: pwsh
        run: |
          while ($true) {
            Write-Host "[$(Get-Date -Format o)] üü¢ RDP running | IP: $env:TAILSCALE_IP"
            Start-Sleep -Seconds 300
          }
