name: Yanzz RDP (Windows 2022 + MuMu + 60h AFK)

on:
  workflow_dispatch:

jobs:
  rdp-mumu:
    runs-on: windows-2022
    timeout-minutes: 3600  # 60 jam, sama seperti awal

    env:
      TAILSCALE_VERSION: "1.82.0"
      MUMU_DIRECT_URL: ""

    steps:
      # --- Enable RDP + create user ---
      - name: Enable RDP & open firewall
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP-3389" dir=in action=allow protocol=TCP localport=3389 | Out-Null
          Restart-Service -Name TermService -Force
          Write-Host "‚úÖ RDP enabled & firewall opened."

      - name: Create RDP user
        shell: pwsh
        run: |
          $user = "Yanzz"
          $pass = ConvertTo-SecureString "Evan123456" -AsPlainText -Force
          if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $user -Password $pass -AccountNeverExpires | Out-Null
          }
          Add-LocalGroupMember -Group "Administrators" -Member $user -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user -ErrorAction SilentlyContinue
          Write-Host "‚úÖ User $user created & ready."

      # --- Install & connect Tailscale ---
      - name: Install Tailscale
        shell: pwsh
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-$env:TAILSCALE_VERSION-amd64.msi"
          $file = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $file
          Start-Process msiexec.exe -ArgumentList "/i `"$file`" /quiet /norestart" -Wait
          Remove-Item $file -Force
          Write-Host "‚úÖ Tailscale installed."

      - name: Connect to Tailscale
        shell: pwsh
        env:
          TS_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          if (-not $env:TS_KEY) {
            Write-Error "‚ùå secrets.TAILSCALE_AUTH_KEY not set."
            exit 1
          }
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey "$env:TS_KEY" --hostname "gh-runner-$env:GITHUB_RUN_ID"
          Start-Sleep -Seconds 10
          $ip = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 | Select-Object -First 1).Trim()
          if (-not $ip) { Write-Error "‚ùå No Tailscale IP found."; exit 1 }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV
          Write-Host "üåê Tailscale connected. IP: $ip"

      # --- Set performance mode ---
      - name: High Performance Power Plan
        shell: pwsh
        run: |
          powercfg /setactive SCHEME_MIN
          powercfg -change -monitor-timeout-ac 0
          powercfg -change -disk-timeout-ac 0
          powercfg -change -standby-timeout-ac 0
          powercfg -change -hibernate-timeout-ac 0
          Write-Host "‚ö° Power plan set to High Performance."

      # --- Enable RDP H.264 Codec (AVC444) ---
      - name: Enable RDP AVC444 Codec
        shell: pwsh
        run: |
          $key = "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
          if (-not (Test-Path $key)) { New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT" -Name "Terminal Services" -Force | Out-Null }
          Set-ItemProperty -Path $key -Name "AVC444ModePreferred" -Type DWord -Value 1 -Force
          Set-ItemProperty -Path $key -Name "UseAVCCodecForRDP" -Type DWord -Value 1 -Force
          Set-ItemProperty -Path $key -Name "PreferHardwareEncoding" -Type DWord -Value 1 -Force
          Write-Host "üé¨ Enabled RDP AVC/H.264 codec."

      # --- Download & install MuMu Player ---
      - name: Download and Install MuMu Player
        shell: pwsh
        run: |
          function Get-LatestMuMuUrl {
            param([string]$OverrideUrl)
            if ($OverrideUrl -and $OverrideUrl.Trim().Length -gt 0) { return $OverrideUrl }
            $page = Invoke-WebRequest -Uri "https://www.mumuplayer.com/download/" -UseBasicParsing
            $link = $page.Links | Where-Object { $_.href -match "\.exe$" } | Select-Object -First 1 -ExpandProperty href
            if ($link -notmatch "^https?://") { $link = "https://www.mumuplayer.com$link" }
            return $link
          }

          $url = Get-LatestMuMuUrl -OverrideUrl $env:MUMU_DIRECT_URL
          $file = "$env:TEMP\mumu_setup.exe"
          Write-Host "‚¨áÔ∏è Downloading MuMu Player from: $url"
          Invoke-WebRequest -Uri $url -OutFile $file -UseBasicParsing
          Write-Host "üöÄ Installing MuMu Player..."
          Start-Process -FilePath $file -ArgumentList "/S" -Wait -NoNewWindow
          Start-Sleep -Seconds 10
          Write-Host "‚úÖ MuMu installation completed (check manually via RDP if needed)."

      # --- Show RDP info ---
      - name: Show Access Info
        shell: pwsh
        run: |
          Write-Host "`n=== RDP ACCESS INFO ==="
          Write-Host "Address : $env:TAILSCALE_IP"
          Write-Host "Username: Yanzz"
          Write-Host "Password: Evan123456"
          Write-Host "=========================`n"

      # --- Keep alive for 60 hours ---
      - name: Keep Alive
        shell: pwsh
        run: |
          while ($true) {
            Write-Host "[$(Get-Date -Format o)] üü¢ RDP running | IP: $env:TAILSCALE_IP"
            Start-Sleep -Seconds 300
          }
      # --- Tailscale untuk IP RDP --------------------------------------------
      - name: Install Tailscale
        shell: pwsh
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-$env:TAILSCALE_VERSION-amd64.msi"
          $out = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $out
          Start-Process msiexec.exe -ArgumentList "/i `"$out`" /quiet /norestart" -Wait
          Remove-Item $out -Force
          Write-Host "‚úÖ Tailscale installed."

      - name: Connect Tailscale
        shell: pwsh
        env:
          TS_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          if (-not $env:TS_KEY) { Write-Error "‚ùå secrets.TAILSCALE_AUTH_KEY not set"; exit 1 }
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey "$env:TS_KEY" --hostname "gh-runner-$env:GITHUB_RUN_ID"
          Start-Sleep -Seconds 8
          $ip = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 | Select-Object -First 1).Trim()
          if (-not $ip) { Write-Error "‚ùå No Tailscale IP"; exit 1 }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV
          Write-Host "üåê Tailscale IP: $ip"

      # --- Performance ringan (tanpa tweak berat) ----------------------------
      - name: High performance power plan + no sleep
        shell: pwsh
        run: |
          powercfg /setactive SCHEME_MIN
          powercfg -change -monitor-timeout-ac 0
          powercfg -change -disk-timeout-ac 0
          powercfg -change -standby-timeout-ac 0
          powercfg -change -hibernate-timeout-ac 0
          Write-Host "‚ö° High performance + no sleep applied."

      # --- Install MuMu Player ------------------------------------------------
      - name: Download & Install MuMuPlayer (official)
        shell: pwsh
        run: |
          function Get-LatestMuMuUrl {
            param([string]$OverrideUrl)

            if ($OverrideUrl -and $OverrideUrl.Trim().Length -gt 0) { return $OverrideUrl }

            # scrape link .exe dari halaman resmi download
            $page = Invoke-WebRequest -Uri "https://www.mumuplayer.com/download/" -UseBasicParsing
            $exeLinks = @()
            if ($page.Links) {
              $exeLinks = $page.Links | Where-Object { $_.href -match "\.exe$" } | Select-Object -ExpandProperty href
            }
            if (-not $exeLinks -or $exeLinks.Count -eq 0) {
              Write-Error "Tidak menemukan link .exe di halaman MuMu."
              return $null
            }
            # ambil link pertama (biasanya 'Download for Windows')
            return $exeLinks[0]
          }

          $dl = Get-LatestMuMuUrl -OverrideUrl $env:MUMU_DIRECT_URL
          if (-not $dl) { Write-Error "‚ùå MuMu URL not found"; exit 1 }

          if ($dl -notmatch "^https?://") {
            # kalau href relatif, gabungkan dengan host
            $dl = [System.Uri]::new([System.Uri] "https://www.mumuplayer.com", $dl).AbsoluteUri
          }

          $inst = Join-Path $env:TEMP "mumu_setup.exe"
          Write-Host "‚¨áÔ∏è  Downloading MuMu from: $dl"
          Invoke-WebRequest -Uri $dl -OutFile $inst -UseBasicParsing

          # coba mode silent umum
          $silentArgs = @("/S","/silent","/verysilent","/quiet","/qn")
          $installed = $false
          foreach ($arg in $silentArgs) {
            Write-Host "Installing MuMu (try $arg)..."
            try {
              Start-Process -FilePath $inst -ArgumentList $arg -Wait -NoNewWindow
              Start-Sleep -Seconds 5
              if (Test-Path "C:\Program Files\MuMu\MuMuPlayer-12\MuMuPlayer.exe" -or
                  Test-Path "C:\Program Files\MuMu\MuMuPlayer\MuMu.exe" -or
                  Test-Path "C:\Program Files\Netease\MuMu\emulator\MuMu.exe") {
                $installed = $true; break
              }
            } catch { }
          }

          if (-not $installed) {
            Write-Host "Silent install belum berhasil. Menjalankan installer normal (best-effort)..."
            Start-Process -FilePath $inst -Wait -NoNewWindow
          }

          # deteksi lokasi install
          $MuMuExe = $null
          $paths = @(
            "C:\Program Files\MuMu\MuMuPlayer-12\MuMuPlayer.exe",
            "C:\Program Files\MuMu\MuMuPlayer\MuMu.exe",
            "C:\Program Files\Netease\MuMu\emulator\MuMu.exe"
          )
          foreach ($p in $paths) { if (Test-Path $p) { $MuMuExe = $p; break } }

          if ($MuMuExe) {
            "MUMU_EXE=$MuMuExe" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding ascii
            Write-Host "‚úÖ MuMu installed at: $MuMuExe"
          } else {
            Write-Warning "‚ö†Ô∏è  MuMu tidak terdeteksi. Lanjut manual setelah RDP masuk."
          }

          # bersih-bersih installer
          Remove-Item $inst -Force -ErrorAction SilentlyContinue

      # --- Info koneksi -------------------------------------------------------
      - name: Show RDP info
        shell: pwsh
        run: |
          Write-Host "`n=== RDP CONNECTION ==="
          Write-Host "Address : $env:TAILSCALE_IP"
          Write-Host "Username: Yanzz"
          Write-Host "Password: Evan123456"
          Write-Host "MuMu   : $env:MUMU_EXE"
          Write-Host "================================`n"

      # --- Keep alive (6 jam) -------------------------------------------------
      - name: Keep Alive (AFK)
        shell: pwsh
        run: |
          while ($true) {
            Write-Host "[$(Get-Date -Format o)] üü¢ RDP active | IP: $env:TAILSCALE_IP"
            Start-Sleep -Seconds 120
          }
