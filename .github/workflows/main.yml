name: Yanzz RDP (Performance Max + IP Access)

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-2022
    timeout-minutes: 3600

    env:
      TAILSCALE_VERSION: "1.82.0"

    steps:
      - name: Enable RDP + Firewall
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389 | Out-Null
          Restart-Service -Name TermService -Force
          Write-Host "‚úÖ RDP enabled and firewall opened."

      - name: Create RDP User
        shell: pwsh
        run: |
          $user = "Yanzz"
          $pass = ConvertTo-SecureString "Evan123456" -AsPlainText -Force
          if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $user -Password $pass -AccountNeverExpires | Out-Null
          }
          Add-LocalGroupMember -Group "Administrators" -Member $user -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user -ErrorAction SilentlyContinue
          Write-Host "‚úÖ User $user created & added to RDP/Admin groups."

      - name: Install Tailscale
        shell: pwsh
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-$env:TAILSCALE_VERSION-amd64.msi"
          $out = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $out
          Start-Process msiexec.exe -ArgumentList "/i `"$out`" /quiet /norestart" -Wait
          Remove-Item $out -Force
          Write-Host "‚úÖ Tailscale installed."

      - name: Connect Tailscale
        shell: pwsh
        env:
          TS_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          if (-not $env:TS_KEY) {
            Write-Error "‚ùå Missing secrets.TAILSCALE_AUTH_KEY"
            exit 1
          }
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey "$env:TS_KEY" --hostname "gh-runner-$env:GITHUB_RUN_ID"
          Start-Sleep -Seconds 10
          $ip = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 | Select-Object -First 1).Trim()
          if (-not $ip) {
            Write-Error "‚ùå No Tailscale IP assigned."
            exit 1
          }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV
          Write-Host "üåê Tailscale connected. IP: $ip"

      - name: Boost Power Plan (High Performance)
        shell: pwsh
        run: |
          powercfg /setactive SCHEME_MIN
          powercfg -change -monitor-timeout-ac 0
          powercfg -change -disk-timeout-ac 0
          powercfg -change -standby-timeout-ac 0
          powercfg -change -hibernate-timeout-ac 0
          Write-Host "‚ö° High performance mode enabled."

      - name: Optimize Windows Visuals & Services
        shell: pwsh
        run: |
          Write-Host "üîß Disabling unneeded services..."
          $svcs = @("SysMain","WSearch","DiagTrack","PrintSpooler","Themes")
          foreach ($svc in $svcs) {
            if (Get-Service -Name $svc -ErrorAction SilentlyContinue) {
              Stop-Service -Name $svc -Force -ErrorAction SilentlyContinue
              Set-Service -Name $svc -StartupType Disabled -ErrorAction SilentlyContinue
              Write-Host "‚õî Disabled: $svc"
            }
          }

          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" /v VisualFXSetting /t REG_DWORD /d 2 /f
          reg add "HKLM\SYSTEM\CurrentControlSet\Control\PriorityControl" /v Win32PrioritySeparation /t REG_DWORD /d 26 /f
          reg add "HKCU\Control Panel\Desktop" /v MenuShowDelay /t REG_SZ /d 0 /f
          reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v fDisableMenuAnims /t REG_DWORD /d 1 /f
          reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v fDisableWallpaper /t REG_DWORD /d 1 /f

          Write-Host "üéØ Performance visuals applied."

      - name: Network & TCP Optimization
        shell: pwsh
        run: |
          Write-Host "üåê Network optimizations..."
          netsh int tcp set global autotuninglevel=high
          netsh int tcp set global congestionprovider=ctcp
          netsh int tcp set global ecncapability=enabled
          netsh int tcp set global chimney=disabled

      - name: Show RDP Connection Info
        shell: pwsh
        run: |
          Write-Host "`n=== RDP CONNECTION INFO ==="
          Write-Host "üîπ Address : $env:TAILSCALE_IP"
          Write-Host "üîπ Username: Yanzz"
          Write-Host "üîπ Password: Evan123456"
          Write-Host "============================`n"

      - name: Keep Alive (AFK Mode)
        shell: pwsh
        run: |
          while ($true) {
            Write-Host "[$(Get-Date -Format o)] üü¢ RDP Active | IP: $env:TAILSCALE_IP"
            Start-Sleep -Seconds 300
          }
